df_data <- df_data[complete.cases(df_data),] # Delete rows that contains NAs
df_mean <- df_data
#Calculate the steps mean by date
df_mean <- group_by(df_mean, date)
df_mean <- summarise(df_mean,mean=mean(steps),median=median(steps),total=sum(steps))
#Print the total number of steps taken per day:
cols <- c("LINE1"="#f04546","LINE2"="#3591d1","BAR"="#62c76b")
ggplot(data=df_mean,aes(date,total)) + geom_histogram(stat='identity',fill='blue') +
geom_line(aes(y=mean(df_mean$total)),color='red') +
geom_line(aes(y=median(df_mean$total)),color='green',linetype=6)
#geom_hline(yintercept = mean(df_mean$total),color='LINE1') +
#geom_hline(yintercept = median(df_mean$total),linetype=6, aes(color='LINE2'))
df_data
head(df_data)
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,mean(steps))
df_ts
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(aes(x=interval,y=average)) + geom_line(color='blue')
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
summary(df_ts)
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_point(y=max(df_ts$average))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(y=max(df_ts$average))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(y=3)
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(y=3))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') + geom_line(aes(x=500))
df_ts
max(df_ts$average)
which(max(df_ts$average))
which(df_ts$average== max(df_ts$average))
df_ts[104,]
df_ts$interval[1]
df_ts$interval[500]
df_ts$interval[1000]
df_ts$interval[45
]
df_ts$interval[which(df_ts$average == max(df_ts$average))]
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(x=df_ts$interval[835])
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(x=df_ts$interval[835]))
df_ts$interval[835]
df_ts$interval[835]
df_ts$interval[45
]
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(x=df_ts$interval[45]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(x=45)
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(x=45))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
#+ geom_line(aes(x=45))
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
+ geom_line(aes(y=150))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(y=150))
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red')
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
geom_text(data='asba')
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
geom_text()
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate(x=df_ts$interval[which(df_ts$average == max(df_ts$average))],
y=max(df_ts$average), label='some text')
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
geom_annotate(x=df_ts$interval[which(df_ts$average == max(df_ts$average))],
y=max(df_ts$average), label='some text')
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
g <- ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red')
print(g)
#g + annotate(x=df_ts$interval[which(df_ts$average == max(df_ts$average))],
# y=max(df_ts$average), label='some text')
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
g <- ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red')
g + annotate(x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=max(df_ts$average), label='some text')
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
g <- ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red')
g + annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=max(df_ts$average), label='some text')
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=0,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))])
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-20,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))])
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))])
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))],color='red')
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
knitr::opts_chunk$set(echo = TRUE)
if (!file.exists('dataactivity.zip')) {
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'dataactivity.zip')
}
if (!file.exists('activity.csv')) {
unzip('dataactivity.zip')
}
df_data <- read.csv('activity.csv',sep=',',header=TRUE)
df_data$date <- as.Date(df_data$date)
library(dplyr)
library(ggplot2)
# Group the data by date and calculate the mean for each date (grouped by)
df_mean <- df_data[complete.cases(df_data),] # Delete rows that contains NAs
#Calculate the steps mean by date
df_mean <- group_by(df_mean, date)
df_mean <- summarise(df_mean,mean=mean(steps),median=median(steps),total=sum(steps))
#Print the total number of steps taken per day:
cols <- c("LINE1"="#f04546","LINE2"="#3591d1","BAR"="#62c76b")
ggplot(data=df_mean,aes(date,total)) + geom_histogram(stat='identity',fill='blue') +
geom_line(aes(y=mean(df_mean$total)),color='red') +
geom_line(aes(y=median(df_mean$total)),color='green',linetype=6)
#geom_hline(yintercept = mean(df_mean$total),color='LINE1') +
#geom_hline(yintercept = median(df_mean$total),linetype=6, aes(color='LINE2'))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))],color='red')
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))],color='red')
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red')
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
if (!file.exists('dataactivity.zip')) {
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
destfile = 'dataactivity.zip')
}
if (!file.exists('activity.csv')) {
unzip('dataactivity.zip')
}
df_data <- read.csv('activity.csv',sep=',',header=TRUE)
df_data$date <- as.Date(df_data$date)
library(dplyr)
library(ggplot2)
# Group the data by date and calculate the mean for each date (grouped by)
df_mean <- df_data[complete.cases(df_data),] # Delete rows that contains NAs
#Calculate the steps mean by date
df_mean <- group_by(df_mean, date)
df_mean <- summarise(df_mean,mean=mean(steps),median=median(steps),total=sum(steps))
#Print the total number of steps taken per day:
cols <- c("LINE1"="#f04546","LINE2"="#3591d1","BAR"="#62c76b")
ggplot(data=df_mean,aes(date,total)) + geom_histogram(stat='identity',fill='blue') +
geom_line(aes(y=mean(df_mean$total)),color='red') +
geom_line(aes(y=median(df_mean$total)),color='green',linetype=6)
#geom_hline(yintercept = mean(df_mean$total),color='LINE1') +
#geom_hline(yintercept = median(df_mean$total),linetype=6, aes(color='LINE2'))
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))],color='red')
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue')
head(df_ts)
df_ts <- df_data[complete.cases(df_data),]
df_ts <- group_by(df_data,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))],color='red')
summary(df_ts)
df_ts <- df_data[complete.cases(df_data),]
df_ts <- group_by(df_ts,interval)
df_ts <- summarise(df_ts,average=mean(steps))
ggplot(data=df_ts,aes(x=interval,y=average)) + geom_line(color='blue') +
geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]),color='red') +
annotate("text",x=df_ts$interval[which(df_ts$average == max(df_ts$average))],y=-5,
label=df_ts$interval[which(df_ts$average == max(df_ts$average))],color='red')
#+ geom_line(aes(x=df_ts$interval[which(df_ts$average == max(df_ts$average))]))
summary(df_data)
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_data$steps))
pritn('Number of NAs:' + int_na)
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_data$steps))
print('Number of NAs:' + int_na)
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_data$steps))
paste('Number of NAs:',int_na)
int_na
?mean
mean(df_data$steps)
mean(df_data$steps,na.rm=T)
df_data$steps[is.na(df_data$steps)]
is.na(df_data$steps)
count(df_data$steps[is.na(df_data$steps)])
sum(df_data$steps[is.na(df_data$steps)])
sum(is.na(df_data$steps))
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_data$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_data$steps,na.rm=TRUE)
#Replace NA by the mean value
df_filled$steps[is.na(df_filled$steps)] <- num_mean
summary(df_filled)
?group_by
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
group_by(df_filled,"date")
df_filled <- summarise(df_filled, mean=mean(df_filled$steps,na.rm=TRUE))
#Replace NA by the mean value
#df_filled$steps[is.na(df_filled$steps)] <- num_mean
df_filled
df_filled <- df_data # Initiate a new Data Frame with df_data
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,"date")
df_filled <- summarise(df_filled, mean=mean(df_filled$steps,na.rm=TRUE))
#Replace NA by the mean value
#df_filled$steps[is.na(df_filled$steps)] <- num_mean
df_filled
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(df_filled$steps,na.rm=TRUE))
#Replace NA by the mean value
#df_filled$steps[is.na(df_filled$steps)] <- num_mean
df_filled
summarize(df_filled)
summarize(df_filled$mean)
summary(df_filled)
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean())
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=tapply(df_filled$steps,date,mean))
df_filled <- df_data
tapply(df_filled$steps,date,mean))
tapply(df_filled$steps,date,mean)
tapply(df_filled$steps,df_filled$date,mean)
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=tapply(df_filled$steps,df_filled$date,mean))
df_filled <- df_data
tapply(df_filled$steps,df_filled$date,mean)
table(tapply(df_filled$steps,df_filled$date,mean))
tapply(df_filled$steps,df_filled$date,mean)
summary(tapply(df_filled$steps,df_filled$date,mean))
str(tapply(df_filled$steps,df_filled$date,mean))
df_filled <- group_by(df_filled,date)
df_filled
df_filled <- df_data
df_filled
df_filled <- group_by(df_filled,date)
df_filled
head(df_filled,100)
source('~/Desktop/coursera/Exploratory Data analysis/Week 4 - Project/plot3.R')
plot3()
source('~/Desktop/coursera/Exploratory Data analysis/Week 4 - Project/plot3.R')
plot3()
dir()
plot3()
source('~/Desktop/coursera/Exploratory Data analysis/Week 4 - Project/plot3.R')
plot3()
df_filled <- df_data
df_filled <- group_by(df_filled,date)
df_filled
summarise(df_filled, sum(steps))
summarise(df_filled, mean(steps))
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
num_mean <- mean(df_filled$steps,na.rm=TRUE)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps))
#Replace NA by the mean value
#df_filled$steps[is.na(df_filled$steps)] <- num_mean
df_filled
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps,na.rm=TRUE))
ggplot(df_filled, aes(x=date,y=mean)) + geom_histogram(stat='identity', fill='blue')
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled$steps <- df_filled$steps[complete.cases(df_filled$steps)]
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled$steps <- df_filled$steps[complete.cases(df_filled$steps),]
df_filled <- df_data
omplete.cases(df_filled$steps
)
complete.cases(df_filled$steps)
df_filled$steps[complete.cases(df_filled$steps)]
df_filled$steps[complete.cases(df_filled$steps)]
df_filled$steps <- df_filled$steps[complete.cases(df_filled$steps)]
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled$steps[complete.cases(df_filled$steps)]
return()
df_filled$steps[!is.na(df_filled$steps)]
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled$steps[!is.na(df_filled$steps)]
return()
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled$steps[!is.na(df_filled$steps)]
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled$steps <- df_filled$steps[!is.na(df_filled$steps)]
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled[complete.cases(df_filled),]
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps,na.rm=TRUE),total=sum(steps))
ggplot(df_filled, aes(x=date,y=mean)) + geom_histogram(stat='identity', fill='blue')
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled[complete.cases(df_filled),]
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps,na.rm=TRUE),total=sum(steps))
ggplot(df_filled, aes(x=date,y=total)) + geom_histogram(stat='identity', fill='blue') +
geom_line(aes(y=mean))
df_filled
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled[complete.cases(df_filled),]
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps),total=sum(steps))
ggplot(df_filled, aes(x=date,y=total)) + geom_histogram(stat='identity', fill='blue') +
geom_line(aes(y=mean(df_filled$total)))
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled[complete.cases(df_filled),]
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps),total=sum(steps))
ggplot(df_filled, aes(x=date,y=total)) + geom_histogram(stat='identity', fill='blue') +
geom_line(aes(y=mean(df_filled$total),color='red')) + geom_line(aes(y=median(df_filled$total),color='blue',linetype=6))
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
df_filled <- df_filled[complete.cases(df_filled),]
#Group the DF by date and calculate the mean value for each date
df_filled <- group_by(df_filled,date)
df_filled <- summarise(df_filled, mean=mean(steps),total=sum(steps))
ggplot(df_filled, aes(x=date,y=total)) + geom_histogram(stat='identity', fill='blue') +
geom_line(aes(y=mean(df_filled$total),color='red')) + geom_line(aes(y=median(df_filled$total)),color='blue',linetype=6)
df_filled <- df_data # Initiate a new Data Frame with df_data
#Calculate the total number of missing values sin the Data set
int_na <- sum(is.na(df_filled$steps))
paste('Number of NAs:',int_na)
?fill
summary(df_filled)
res <-fill(df_filled)
res <- fill(df_filled)
library(tidyr)
res <- fill(df_filled)
summary(res)
res <- fill(df_filled,steps)
summary(res)
str(res)
res <- fill(df_filled,steps)
str(res)
summary(res)
